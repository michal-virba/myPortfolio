class App{constructor(){new Modal,new PageScroll,new TabbedComponent,new MenuFade,new Sticky,new RevealSections,new Skills,new LazyLoading,new Slider}}const app=new App,modal=document.querySelector(".modal"),overlay=document.querySelector(".overlay"),btnCloseModal=document.querySelector(".btn--close-modal"),btnsOpenModal=document.querySelectorAll(".btn--show-modal"),btnScrollTo=document.querySelector(".btn--scroll-to"),section2=document.querySelector("#section--2"),tabs=document.querySelectorAll(".skills__tab"),tabsContainer=document.querySelector(".skills__tab-container"),tabsContent=document.querySelectorAll(".skills__content"),nav=document.querySelector(".nav"),navBar=document.querySelector(".nav__links--bar"),navIcon=document.querySelector(".nav__link--icon");class Modal{constructor(){btnsOpenModal.forEach(e=>e.addEventListener("click",this.openModal));for(let e=0;e<btnsOpenModal.length;e++)btnsOpenModal[e].addEventListener("click",this.openModal);btnCloseModal.addEventListener("click",this.closeModal),overlay.addEventListener("click",this.closeModal),this.escKey()}openModal(e){e.preventDefault(),modal.classList.remove("hidden"),overlay.classList.remove("hidden")}closeModal(){modal.classList.add("hidden"),overlay.classList.add("hidden")}escKey(){document.addEventListener("keydown",e=>{"Escape"!==e.key||modal.classList.contains("hidden")||this.closeModal()})}}class PageScroll{constructor(){btnScrollTo.addEventListener("click",()=>{section2.scrollIntoView({behavior:"smooth"})}),document.querySelector(".nav__links").addEventListener("click",function(e){e.preventDefault(),e.target.classList.contains("nav__link")&&(e=e.target.getAttribute("href"),document.querySelector(e).scrollIntoView({behavior:"smooth"}))}),navIcon.addEventListener("click",e=>{navBar.classList.toggle("hidden")}),navBar.addEventListener("click",e=>{e.preventDefault(),e.target.classList.contains("nav__link")&&(e=e.target.getAttribute("href"),document.querySelector(e).scrollIntoView({behavior:"smooth"}),navBar.classList.add("hidden"))})}}class TabbedComponent{constructor(){tabsContainer.addEventListener("click",function(e){e=e.target.closest(".skills__tab");e&&(tabs.forEach(e=>e.classList.remove("skills__tab--active")),tabsContent.forEach(e=>e.classList.remove("skills__content--active")),e.classList.add("skills__tab--active"),document.querySelector(".skills__content--"+e.dataset.tab).classList.add("skills__content--active"))})}}class MenuFade{constructor(){nav.addEventListener("mouseover",this.handleHover.bind(.5)),nav.addEventListener("mouseout",this.handleHover.bind(1))}handleHover(e){if(e.target.classList.contains("nav__link")){const s=e.target;var e=s.closest(".nav").querySelectorAll(".nav__link"),t=s.closest(".nav").querySelector("img");e.forEach(e=>{e!==s&&(e.style.opacity=this)}),t.style.opacity=this}}}class Sticky{constructor(){var e=document.querySelector(".header"),t=nav.getBoundingClientRect().height;new IntersectionObserver(this.stickyNav,{root:null,threshold:0,rootMargin:`-${t}px`}).observe(e)}stickyNav(e){var[e]=e;e.isIntersecting?nav.classList.remove("sticky"):nav.classList.add("sticky")}}class Skills{constructor(){var e=document.querySelector(".skills__blur");e.addEventListener("mouseover",this.skillsHover.bind(10)),e.addEventListener("mouseout",this.skillsHover.bind(0))}skillsHover(e){const t=e.target;(t.closest(".skills__images")?.querySelectorAll(".skills__image"))?.forEach(e=>{e!==t&&(e.style.filter=`blur(${this}px)`)})}}class RevealSections{constructor(){var e=document.querySelectorAll(".section");const t=new IntersectionObserver(this.revealSection,{root:null,threshold:.1});e.forEach(function(e){t.observe(e),e.classList.add("section--hidden")})}revealSection(e,t){var[e]=e;e.isIntersecting&&(e.target.classList.remove("section--hidden"),t.unobserve(e.target))}}class LazyLoading{constructor(){var e=document.querySelectorAll("img[data-src]");const t=new IntersectionObserver(this.loadImg,{root:null,threshold:0,rootMargin:"200px"});e.forEach(e=>t.observe(e))}loadImg(e,t){const[s]=e;s.isIntersecting&&(s.target.src=s.target.dataset.src,s.target.addEventListener("load",function(){s.target.classList.remove("lazy-img")}),t.unobserve(s.target))}}class Slider{constructor(){this.slider()}slider(){const e=document.querySelectorAll(".slide");var t=document.querySelector(".slider__btn--left"),s=document.querySelector(".slider__btn--right");const o=document.querySelector(".dots");let n=0;function l(e){document.querySelectorAll(".dots__dot").forEach(e=>e.classList.remove("dots__dot--active")),document.querySelector(`.dots__dot[data-slide="${e}"]`).classList.add("dots__dot--active")}function c(s){e.forEach((e,t)=>e.style.transform=`translateX(${100*(t-s)}%)`)}function r(){n===i-1?n=0:n++,c(n),l(n)}function a(){0===n?n=i-1:n--,c(n),l(n)}const i=e.length;c(0),e.forEach(function(e,t){o.insertAdjacentHTML("beforeend",`<button class="dots__dot" data-slide="${t}"></button>`)}),l(0),s.addEventListener("click",r),t.addEventListener("click",a),document.addEventListener("keydown",function(e){"ArrowLeft"===e.key&&a(),"ArrowRight"===e.key&&r()}),o.addEventListener("click",function(e){e.target.classList.contains("dots__dot")&&(e=e.target.dataset["slide"],c(e),l(e))})}}
//# sourceMappingURL=data:application/json;charset=utf8;base64,
